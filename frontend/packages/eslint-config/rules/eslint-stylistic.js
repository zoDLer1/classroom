import stylistic from '@stylistic/eslint-plugin';

export default [
    {
        rules: {
            ...stylistic.configs['recommended-flat'].rules,
            '@stylistic/jsx-indent-props': 'off',
            '@stylistic/array-bracket-newline': ['error', 'consistent'],
            '@stylistic/array-element-newline': ['error', 'consistent'],
            '@stylistic/arrow-parens': ['error', 'always'],
            '@stylistic/block-spacing': ['error', 'always'],
            '@stylistic/brace-style': ['error', '1tbs'],
            '@stylistic/comma-dangle': ['error', 'always-multiline'],
            '@stylistic/function-call-argument-newline': ['error', 'consistent'],
            '@stylistic/function-call-spacing': ['error', 'never'],
            '@stylistic/function-paren-newline': ['error', 'multiline'],
            '@stylistic/generator-star-spacing': ['error', { after: false, before: true }],
            '@stylistic/implicit-arrow-linebreak': ['error', 'beside'],
            '@stylistic/indent': ['error', 4],
            '@stylistic/indent-binary-ops': ['error', 4],
            '@stylistic/key-spacing': ['error', {
                afterColon: true,
                beforeColon: false,
                mode: 'strict',
            }],
            '@stylistic/line-comment-position': ['error', { position: 'above' }],
            '@stylistic/lines-around-comment': ['error', { beforeBlockComment: true }],
            '@stylistic/member-delimiter-style': ['error', {
                multiline: {
                    delimiter: 'semi',
                    requireLast: true,
                },
                multilineDetection: 'brackets',
                singleline: {
                    delimiter: 'semi',
                    requireLast: false,
                },
            }],
            '@stylistic/multiline-comment-style': ['error', 'separate-lines'],
            '@stylistic/new-parens': ['error', 'never'],
            '@stylistic/newline-per-chained-call': ['error', { ignoreChainWithDepth: 3 }],
            '@stylistic/no-confusing-arrow': 'error',
            '@stylistic/no-extra-semi': 'error',
            '@stylistic/no-tabs': 'error',
            '@stylistic/object-curly-newline': ['error', { consistent: true }],
            '@stylistic/object-curly-spacing': ['error', 'always'],
            '@stylistic/object-property-newline': ['error', {
                allowAllPropertiesOnSameLine: true,
            }],
            '@stylistic/one-var-declaration-per-line': ['error', 'initializations'],
            '@stylistic/padded-blocks': ['error', 'never'],
            '@stylistic/quote-props': ['error', 'as-needed'],
            '@stylistic/quotes': ['error', 'single'],
            '@stylistic/semi': ['error', 'always'],
            '@stylistic/semi-style': ['error', 'last'],
            '@stylistic/switch-colon-spacing': ['error', { after: true, before: false }],
            '@stylistic/template-curly-spacing': ['error', 'never'],
            '@stylistic/wrap-iife': ['error', 'inside'],
            '@stylistic/wrap-regex': 'error',
            '@stylistic/yield-star-spacing': ['error', 'before'],
        },
    },
];
